Hello! Welcome to the github repository for WP3.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
For 'DragCalc', the program first defines the variables to be used; most are fairly self-explanatory, for example cd is the coefficient of drag, Asp is the area of the solar panel, so on and so forth. 

The function densitysm(x) uses the empirical formula derived from Mars climate database results to form a worst-case density function. The other functions until yawdrag(z) are experiments, alternate approaches, and incorrect methodology left in order to document the learning process. The complicated formula for density was a result of finding a model based on Viking data, but it was too optimistic and found density to be low compared to the worst times of the year by a factor of 3. drag(z) uses a simplified model to calculate drag as a function of height(z), where the counter torque on the other solar panel is zero. this was iterated past as new approaches were analyzed. Dragalt(z) uses the Viking density formula to find drag as a function of height(z). 

Yawdrag(z) is the final iteration of the process: this calculates the yaw drag accounting for lift effects, and using the pessimistic scaled model for drag. 

The various functions relating to arrays store the values of this function for the step width, and compare it with the solar pressure torque to find the crossover point where drag torque is less than solar torque. 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
For 'calculations mmoi.py', the program first defines the variables to be used, such as the initial volume of fuel (vbegin), density of fuel (rho), total thrust (thrust), exhaust velocity (vexhaust),
burn time (tburn), amount of steps (steps), radius of the fuel tank (R), mass of the fuel tank (mtank), mass of the spacecraft without propellants and tank (mbig) and initial MMOI of the spacecraft with the
full tank (Isc_roll_initial). Additionally the mass flow (mdot), dry mass (mdry), and wet mass (mwet) are calculated, and will be used in the following calculations. All of the aforementioned values are included
in the code in SI units.
Aditionally, the code lists several functions, which perform calculations regarding: conversion of deltaV to burn time (Dvtoburntime), spacecraft roll mass moment of inertia calculation as a function of fuel height 
(Isc_Roll), spacecraft tank mass moment of inertia as a function of fuel height (Iroll), height of the fuel in the tank as a function of fuel volume (h), volume of fuel in the spacecraft tank as a function of time (Vol), 
calculation of spacecraft roll mass moment of inertia as a function of time (FunnyFunc_Roll), calculation of the location of the spacecraft's center of mass location as a function of fuel height (com_roll) and time (FunnyFunc_com_Roll).
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Finally, phaseplot is where the plot for mission phases was made. 
